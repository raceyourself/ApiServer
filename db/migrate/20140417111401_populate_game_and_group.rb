class PopulateGameAndGroup < ActiveRecord::Migration
  def up
    # Start with blank slate
    ActiveRecord::Base.connection.execute("TRUNCATE games")
    ActiveRecord::Base.connection.execute("TRUNCATE game_states")
    ActiveRecord::Base.connection.execute("TRUNCATE menu_items")
    # Games
    monsterGame = Game.create!(:id => "activity_monster", :name => "Giant Monster Challenge", :activity => "run", :description => "You have woken up a giant monster - and he's hungry", :tier => 3, :price_in_points => 5000, :price_in_gems => 4, :type => "N/A", :scene_name => "Race Mode")
    pressupsGame = Game.create!(:id => "activity_press_up", :name => "Press-ups", :activity => "all", :description => "Learn the proper technique for press ups.", :tier => 3, :price_in_points => 5000, :price_in_gems => 4, :type => "N/A", :scene_name => "Race Mode")
    trainSnackGame = Game.create!(:id => "activity_train", :name => "The Train Game!", :activity => "all", :description => "There's a damsel in distress on the tracks - save her!", :tier => 0, :price_in_points => 10000, :price_in_gems => 5, :type => "Snack", :scene_name => "TrainSnack")
    raceYourselfBikeGame = Game.create!(:id => "activity_bike", :name => "Race Yourself", :activity => "cycle", :description => "Cycle against your own avatar for points", :tier => 0, :price_in_points => 500, :price_in_gems => 0, :type => "Bike", :scene_name => "Race Mode")
    boulderGame = Game.create!(:id => "activity_boulder", :name => "Boulder Dash", :activity => "run", :description => "Run away from the boulder!", :tier => 1, :price_in_points => 1000, :price_in_gems => 1, :type => "Snack", :scene_name => "BoulderSnack")
    challengeGame = Game.create!(:id => "activity_versus", :name => "Challenges", :activity => "all", :description => "Race against your friends!", :tier => 1, :price_in_points => 5000, :price_in_gems => 3, :type => "Challenge", :scene_name => "Race Mode")
    raceYourselfRunningGame = Game.create!(:id => "activity_race_yourself", :name => "Race Yourself", :activity => "run", :description => "Race against your own avatar", :tier => 0, :price_in_points => 0, :price_in_gems => 0, :type => "Race", :scene_name => "Race Mode")
    achievementsGame = Game.create!(:id => "activity_achievement", :name => "Achievements", :activity => "run", :description => "View your achievements and progress", :tier => 2, :price_in_points => 5000, :price_in_gems => 3, :type => "N/A", :scene_name => "Race Mode")
    sprintRecordSnackGame = Game.create!(:id => "activity_bolt_level1", :name => "Beat 100m Sprint World Record", :activity => "run", :description => "Try to beat the world record 100 time", :tier => 2, :price_in_points => 5000, :price_in_gems => 3, :type => "Snack", :scene_name => "UsainSnack")
    zombieSnackGame = Game.create!(:id => "activity_zombie", :name => "Zombie Mode", :activity => "all", :description => "How long can you survive against zombies?", :tier => 1, :price_in_points => 0, :price_in_gems => 0, :type => "Snack", :scene_name => "ZombieSnack")
    heartRateMonitorGame = Game.create!(:id => "activity_heart", :name => "Heart-rate monitor", :activity => "all", :description => "Connect to a heart-rate monitor", :tier => 3, :price_in_points => 5000, :price_in_gems => 4, :type => "N/A", :scene_name => "Race Mode")
    snackRunGame = Game.create!(:id => "activity_food_burn", :name => "Snack Run", :activity => "all", :description => "Go on a fun run packed with mini games!", :tier => 1, :price_in_points => 0, :price_in_gems => 0, :type => "Race", :scene_name => "SnackRun")
    # Menu items
    MenuItem.create!(:icon => "activity_monster", :column => -2, :row => 0, :game => monsterGame)
    MenuItem.create!(:icon => "activity_press_up", :column => -2, :row => 1, :game => pressupsGame)
    MenuItem.create!(:icon => "activity_train", :column => -2, :row => -1, :game => trainSnackGame)
    MenuItem.create!(:icon => "cycle", :column => -1, :row => -1, :game => raceYourselfBikeGame)
    MenuItem.create!(:icon => "activity_boulder", :column => -1, :row => 0, :game => boulderGame)
    MenuItem.create!(:icon => "activity_versus", :column => -1, :row => 1, :game => challengeGame)
    MenuItem.create!(:icon => "activity_run", :column => 0, :row => -1, :game => raceYourselfRunningGame)
    MenuItem.create!(:icon => "activity_achievement", :column => 0, :row => 1, :game => achievementsGame)
    MenuItem.create!(:icon => "activity_bolt_level1", :column => 1, :row => 1, :game => sprintRecordSnackGame)
    MenuItem.create!(:icon => "activity_zombie", :column => 1, :row => -1, :game => zombieSnackGame)
    MenuItem.create!(:icon => "activity_heart", :column => 2, :row => 0, :game => heartRateMonitorGame)
    MenuItem.create!(:icon => "activity_food_burn", :column => 1, :row => 0, :game => snackRunGame)
    # default global game states
    GameState.create!(:locked => true, :enabled => false, :game => monsterGame)
    GameState.create!(:locked => true, :enabled => false, :game => pressupsGame)
    GameState.create!(:locked => true, :enabled => true, :game => trainSnackGame)
    GameState.create!(:locked => false, :enabled => true, :game => raceYourselfBikeGame)
    GameState.create!(:locked => true, :enabled => true, :game => boulderGame)
    GameState.create!(:locked => false, :enabled => true, :game => challengeGame)
    GameState.create!(:locked => false, :enabled => true, :game => raceYourselfRunningGame)
    GameState.create!(:locked => true, :enabled => false, :game => achievementsGame)
    GameState.create!(:locked => true, :enabled => true, :game => sprintRecordSnackGame)
    GameState.create!(:locked => true, :enabled => true, :game => zombieSnackGame)
    GameState.create!(:locked => true, :enabled => false, :game => heartRateMonitorGame)
    GameState.create!(:locked => false, :enabled => true, :game => snackRunGame)
    # groups
    betaGroup = Group.find_or_create_by!(:name => "Beta")
    devGroup = Group.find_or_create_by!(:name => "Developers")
    betaAllSnacksGroup = Group.find_or_create_by!(:name => "Snacks")
    zombieSnackGroup = Group.find_or_create_by!(:name => "Zombie")
    # states
    GameState.create!(:locked => false, :enabled => false, :game => trainSnackGame, :group => betaGroup)
    GameState.create!(:locked => false, :enabled => false, :game => boulderGame, :group => betaGroup)
    GameState.create!(:locked => false, :enabled => false, :game => challengeGame, :group => betaGroup)
    GameState.create!(:locked => false, :enabled => false, :game => raceYourselfRunningGame, :group => betaGroup)
    GameState.create!(:locked => false, :enabled => false, :game => sprintRecordSnackGame, :group => betaGroup)
    GameState.create!(:locked => false, :enabled => false, :game => zombieSnackGame, :group => betaGroup)
    GameState.create!(:locked => false, :enabled => false, :game => snackRunGame, :group => betaGroup)
    GameState.create!(:locked => false, :game => trainSnackGame, :group => devGroup)
    GameState.create!(:locked => false, :game => boulderGame, :group => devGroup)
    GameState.create!(:locked => false, :game => challengeGame, :group => devGroup)
    GameState.create!(:locked => false, :game => raceYourselfRunningGame, :group => devGroup)
    GameState.create!(:locked => false, :game => sprintRecordSnackGame, :group => devGroup)
    GameState.create!(:locked => false, :game => zombieSnackGame, :group => devGroup)
    GameState.create!(:locked => false, :enabled => true, :game => trainSnackGame, :group => betaAllSnacksGroup)
    GameState.create!(:locked => false, :enabled => true, :game => zombieSnackGame, :group => betaAllSnacksGroup)
    GameState.create!(:locked => false, :enabled => true, :game => sprintRecordSnackGame, :group => betaAllSnacksGroup)
    GameState.create!(:locked => false, :enabled => true, :game => zombieSnackGame, :group => zombieSnackGroup)
  end
  def down
    ActiveRecord::Base.connection.execute("TRUNCATE games")
    ActiveRecord::Base.connection.execute("TRUNCATE game_states")
    ActiveRecord::Base.connection.execute("TRUNCATE menu_items")
  end
end
